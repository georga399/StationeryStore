@model List<CartProductViewModel>

<!DOCTYPE html>
<html>
<head>
    <title>Корзина</title>
</head>
<body>
@{
    // Получаем значение из cookie с тегом 'name'
    string userName = "Гость"; // Значение по умолчанию, если cookie не установлено
    if (Context.Request.Cookies["name"] != null)
    {
        userName = Context.Request.Cookies["name"];
    }
}

<h2>Корзина для пользователя: @userName</h2>

<ul>
    @{
        decimal totalCost = 0;
    }
    @foreach (var cartProduct in Model)
    {
        <li>
            <p>
                <strong>Имя товара:</strong> @cartProduct.Product.Name
            </p>
            <p>
                <strong>Цена:</strong> @cartProduct.Product.Cost
            </p>
            <button type="button" onclick="deleteFromCart(@cartProduct.Id)">Удалить</button>
        </li>

        totalCost += cartProduct.Product.Cost;


    }
</ul>

<p>
    <strong>Общая стоимость:</strong> @totalCost
</p>

<script>
        document.addEventListener('DOMContentLoaded', function () {
            const userRole = getCookie('userRole');

            switch (userRole) {
                case 'admin':
                    window.location.href='http://localhost:5264/Manage';
                    break;
                case 'Unauth':
                    window.location.href='http://localhost:5264/Auth/Login';
                    break;
            }
        });

        function getCookie(name) {
            const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
            if (match) return match[2];
        }

        function deleteFromCart(productId) {
                const url = `http://localhost:5264/Shop/DeleteFromCart?Id=${productId}&Product.Id=${productId}&Product.Name=1&Product.Cost=1&Product.Count=1&ProductId=1&Count=1&User.Id=1&User.Name=1&UserId=1`;

                fetch(url, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',

                    },
                })
                .then(_ => {
                    location.reload();
                })
            }

    </script>

</body>
</html>